{{ ansible_managed | comment }}
{% if mailman3_uwsgi_template_content is defined %}
{{ mailman3_uwsgi_template_content }}
{% else %}
[uwsgi]
# Port on which uwsgi will be listening.
uwsgi-socket = /run/mailman3-web/uwsgi.sock

#Enable threading for python
enable-threads = true

# Move to the directory wher the django files are.
chdir = /usr/share/mailman3-web

# Use the wsgi file provided with the django project.
wsgi-file = wsgi.py

# Setup default number of processes and threads per process.
master = true
process = {{ mailman3_uwsgi_process }}
threads = {{ mailman3_uwsgi_threads }}

# Drop privielges and don't run as root.
uid = {{ mailman3_http_user }}
gid = {{ mailman3_http_user }}

plugins = python3

# Setup the django_q related worker processes.
attach-daemon = python3 manage.py qcluster

# Setup hyperkitty's cron jobs.
#unique-cron = -1 -1 -1 -1 -1 ./manage.py runjobs minutely
#unique-cron = -15 -1 -1 -1 -1 ./manage.py runjobs quarter_hourly
#unique-cron = 0 -1 -1 -1 -1 ./manage.py runjobs hourly
#unique-cron = 0 0 -1 -1 -1 ./manage.py runjobs daily
#unique-cron = 0 0 1 -1 -1 ./manage.py runjobs monthly
#unique-cron = 0 0 -1 -1 0 ./manage.py runjobs weekly
#unique-cron = 0 0 1 1 -1 ./manage.py runjobs yearly

# Setup the request log.
#req-logger = file:/var/log/mailman3/web/mailman-web.log

# Log cron seperately.
#logger = cron file:/var/log/mailman3/web/mailman-web-cron.log
#log-route = cron uwsgi-cron

# Log qcluster commands seperately.
#logger = qcluster file:/var/log/mailman3/web/mailman-web-qcluster.log
#log-route = qcluster uwsgi-daemons

# Last log and it logs the rest of the stuff.
#logger = file:/var/log/mailman3/web/mailman-web-error.log
logto = /var/log/mailman3/web/mailman-web.log
{% endif %}
